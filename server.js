// server.js
const express = require('express');
const cors = require('cors');
const sgMail = require('@sendgrid/mail');
const twilio = require('twilio');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json({ limit: '50mb' }));

// Initialize SendGrid
sgMail.setApiKey(process.env.SENDGRID_API_KEY);

// Initialize Twilio
const twilioClient = twilio(process.env.TWILIO_ACCOUNT_SID, process.env.TWILIO_AUTH_TOKEN);

// Email templates
const getCompanyEmailTemplate = (formData) => {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8f9fa;">
      <div style="background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h2 style="color: #4f46e5; text-align: center; margin-bottom: 20px;">🏫 Complete Educational Package Generated</h2>
        
        <div style="background-color: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <p><strong>School:</strong> ${formData.schoolName || 'Not specified'}</p>
          <p><strong>Subject:</strong> ${formData.subjectName || 'Not specified'}</p>
          <p><strong>Grade:</strong> ${formData.studentGrade || 'Not specified'}</p>
        </div>
        
        <h3 style="color: #374151;">📦 Package Contents:</h3>
        <ul style="list-style-type: none; padding-left: 0;">
          <li style="padding: 5px 0;">✅ Student Quiz Answers</li>
          <li style="padding: 5px 0;">✅ Study Notes</li>
          <li style="padding: 5px 0;">✅ Answer Key</li>
          <li style="padding: 5px 0;">✅ Teacher's Lesson Plan</li>
          <li style="padding: 5px 0;">✅ Student's Study Plan</li>
        </ul>
        
        <p style="margin-top: 30px; color: #6b7280;">All materials have been distributed according to your settings.</p>
        <p style="color: #4f46e5; font-weight: bold; text-align: center; margin-top: 20px;">Generated by Genius Educational Software</p>
      </div>
    </div>
  `;
};

const getTeacherEmailTemplate = (formData) => {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8f9fa;">
      <div style="background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h2 style="color: #7c3aed; text-align: center; margin-bottom: 20px;">👨‍🏫 Teaching Materials Ready</h2>
        <p style="font-size: 16px; color: #374151;">Dear Teacher,</p>
        <p style="color: #6b7280;">Here are the teaching materials for <strong>${formData.subjectName || 'the quiz'}</strong>:</p>
        
        <h3 style="color: #374151;">📚 Attached Materials:</h3>
        <ul style="list-style-type: none; padding-left: 0; background-color: #f3f4f6; padding: 15px; border-radius: 8px;">
          <li style="padding: 5px 0;">📝 Student Quiz Answers (for grading)</li>
          <li style="padding: 5px 0;">📖 Study Notes (teaching context)</li>
          <li style="padding: 5px 0;">🔑 Answer Key (grading guide)</li>
        </ul>
        
        <div style="background-color: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <p><strong>School:</strong> ${formData.schoolName || 'Not specified'}</p>
          <p><strong>Grade:</strong> ${formData.studentGrade || 'Not specified'}</p>
        </div>
        
        <p style="margin-top: 30px; color: #6b7280;">Best regards,<br><strong style="color: #7c3aed;">Genius Educational Software</strong></p>
      </div>
    </div>
  `;
};

const getParentEmailTemplate = (formData) => {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8f9fa;">
      <div style="background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h2 style="color: #ec4899; text-align: center; margin-bottom: 20px;">👨‍👩‍👧‍👦 Your Child's Quiz Results</h2>
        <p style="font-size: 16px; color: #374151;">Dear Parent,</p>
        <p style="color: #6b7280;">Your child has completed a quiz in <strong>${formData.subjectName || 'their subject'}</strong>.</p>
        
        <h3 style="color: #374151;">📋 Attached Documents:</h3>
        <ul style="list-style-type: none; padding-left: 0; background-color: #f3f4f6; padding: 15px; border-radius: 8px;">
          <li style="padding: 5px 0;">📝 Quiz Answers (your child's responses)</li>
          <li style="padding: 5px 0;">🔑 Answer Key (to help review with your child)</li>
        </ul>
        
        <div style="background-color: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <p><strong>School:</strong> ${formData.schoolName || 'Not specified'}</p>
          <p><strong>Grade:</strong> ${formData.studentGrade || 'Not specified'}</p>
        </div>
        
        <p style="color: #6b7280;">Use the answer key to help your child understand any mistakes and learn from them.</p>
        <p style="margin-top: 30px; color: #6b7280;">Best regards,<br><strong style="color: #ec4899;">Genius Educational Software</strong></p>
      </div>
    </div>
  `;
};

const getStudentEmailTemplate = (formData) => {
  return `
    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8f9fa;">
      <div style="background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
        <h2 style="color: #10b981; text-align: center; margin-bottom: 20px;">🎓 Your Quiz Results</h2>
        <p style="font-size: 16px; color: #374151;">Hello!</p>
        <p style="color: #6b7280;">Here are your answers for the <strong>${formData.subjectName || 'quiz'}</strong> you just completed.</p>
        
        <h3 style="color: #374151;">📝 What's Attached:</h3>
        <ul style="list-style-type: none; padding-left: 0; background-color: #f3f4f6; padding: 15px; border-radius: 8px;">
          <li style="padding: 5px 0;">Your quiz responses for review</li>
        </ul>
        
        <div style="background-color: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <p><strong>Subject:</strong> ${formData.subjectName || 'Not specified'}</p>
          <p><strong>Grade:</strong> ${formData.studentGrade || 'Not specified'}</p>
        </div>
        
        <p style="color: #6b7280;">Review your answers and discuss any questions with your teacher or parents.</p>
        <p style="margin-top: 30px; color: #6b7280;">Keep learning!<br><strong style="color: #10b981;">Genius Educational Software</strong></p>
      </div>
    </div>
  `;
};

// API Routes
app.get('/', (req, res) => {
  res.json({ 
    message: 'Genius Educational Software Backend API',
    status: 'Running',
    version: '1.0.0'
  });
})

app.post('/api/send-quiz-materials', async (req, res) => {
  try {
    const {
      formData,
      studentAnswersPDF,
      studyNotesPDF,
      answerKeyPDF,
      lessonPlanPDF,
      studyPlanPDF
    } = req.body;

    console.log('Received request to send quiz materials');
    console.log('Form data:', formData);

    const results = {
      emails: [],
      whatsapp: [],
      errors: []
    };

    // Prepare email attachments
    const getAttachment = (content, filename) => ({
      content: content,
      filename: filename,
      type: 'application/pdf',
      disposition: 'attachment'
    });

    // 1. Send complete package to company email
    if (formData.companyEmail) {
      try {
        await sgMail.send({
          to: formData.companyEmail,
          from: 'noreply@geniuseducational.com',
          subject: `📚 Complete Educational Package - ${formData.subjectName || 'Quiz'}`,
          html: getCompanyEmailTemplate(formData),
          attachments: [
            getAttachment(studentAnswersPDF, `Student_Answers_${Date.now()}.pdf`),
            getAttachment(studyNotesPDF, `Study_Notes_${Date.now()}.pdf`),
            getAttachment(answerKeyPDF, `Answer_Key_${Date.now()}.pdf`),
            getAttachment(lessonPlanPDF, `Lesson_Plan_${Date.now()}.pdf`),
            getAttachment(studyPlanPDF, `Study_Plan_${Date.now()}.pdf`)
          ]
        });
        results.emails.push(`Company email sent to ${formData.companyEmail}`);
      } catch (error) {
        results.errors.push(`Company email failed: ${error.message}`);
      }
    }

    // 2. Send teaching materials to teacher
    if (formData.teacherEmail) {
      try {
        await sgMail.send({
          to: formData.teacherEmail,
          from: 'noreply@geniuseducational.com',
          subject: `👨‍🏫 Teaching Materials - ${formData.subjectName || 'Quiz'}`,
          html: getTeacherEmailTemplate(formData),
          attachments: [
            getAttachment(studentAnswersPDF, `Student_Answers_${Date.now()}.pdf`),
            getAttachment(studyNotesPDF, `Study_Notes_${Date.now()}.pdf`),
            getAttachment(answerKeyPDF, `Answer_Key_${Date.now()}.pdf`)
          ]
        });
        results.emails.push(`Teacher email sent to ${formData.teacherEmail}`);
      } catch (error) {
        results.errors.push(`Teacher email failed: ${error.message}`);
      }
    }

    // 3. Send review materials to parent
    if (formData.parentEmail) {
      try {
        await sgMail.send({
          to: formData.parentEmail,
          from: 'noreply@geniuseducational.com',
          subject: `👨‍👩‍👧‍👦 Quiz Results - ${formData.subjectName || 'Quiz'}`,
          html: getParentEmailTemplate(formData),
          attachments: [
            getAttachment(studentAnswersPDF, `Student_Answers_${Date.now()}.pdf`),
            getAttachment(answerKeyPDF, `Answer_Key_${Date.now()}.pdf`)
          ]
        });
        results.emails.push(`Parent email sent to ${formData.parentEmail}`);
      } catch (error) {
        results.errors.push(`Parent email failed: ${error.message}`);
      }
    }

    // 4. Send quiz results to student
    if (formData.studentEmail) {
      try {
        await sgMail.send({
          to: formData.studentEmail,
          from: 'noreply@geniuseducational.com',
          subject: `🎓 Your Quiz Results - ${formData.subjectName || 'Quiz'}`,
          html: getStudentEmailTemplate(formData),
          attachments: [
            getAttachment(studentAnswersPDF, `My_Quiz_Results_${Date.now()}.pdf`)
          ]
        });
        results.emails.push(`Student email sent to ${formData.studentEmail}`);
      } catch (error) {
        results.errors.push(`Student email failed: ${error.message}`);
      }
    }

    // WhatsApp Notifications
    const twilioWhatsAppNumber = 'whatsapp:+14155238886';

    // Send WhatsApp notifications
    if (formData.companyWhatsApp) {
      try {
        await twilioClient.messages.create({
          from: twilioWhatsAppNumber,
          to: `whatsapp:${formData.companyWhatsApp}`,
          body: `🏫 *Genius Educational Software*\n\n✅ Complete educational package generated!\n\n📚 Subject: ${formData.subjectName || 'Quiz'}\n🎓 Grade: ${formData.studentGrade || 'Not specified'}\n🏫 School: ${formData.schoolName || 'Not specified'}\n\nAll 5 PDFs have been sent to your email: ${formData.companyEmail}`
        });
        results.whatsapp.push(`Company WhatsApp sent to ${formData.companyWhatsApp}`);
      } catch (error) {
        results.errors.push(`Company WhatsApp failed: ${error.message}`);
      }
    }

    if (formData.teacherWhatsApp) {
      try {
        await twilioClient.messages.create({
          from: twilioWhatsAppNumber,
          to: `whatsapp:${formData.teacherWhatsApp}`,
          body: `👨‍🏫 *Teaching Materials Ready*\n\nNew quiz materials available for:\n📚 Subject: ${formData.subjectName || 'Quiz'}\n🎓 Grade: ${formData.studentGrade || 'Not specified'}\n\n✅ Student answers\n✅ Study notes\n✅ Answer key\n\nCheck your email: ${formData.teacherEmail}`
        });
        results.whatsapp.push(`Teacher WhatsApp sent to ${formData.teacherWhatsApp}`);
      } catch (error) {
        results.errors.push(`Teacher WhatsApp failed: ${error.message}`);
      }
    }

    if (formData.parentWhatsApp) {
      try {
        await twilioClient.messages.create({
          from: twilioWhatsAppNumber,
          to: `whatsapp:${formData.parentWhatsApp}`,
          body: `👨‍👩‍👧‍👦 *Quiz Results Available*\n\nYour child completed a quiz:\n📚 Subject: ${formData.subjectName || 'Quiz'}\n🎓 Grade: ${formData.studentGrade || 'Not specified'}\n\n✅ Quiz answers\n✅ Answer key (to help your child)\n\nCheck your email: ${formData.parentEmail}`
        });
        results.whatsapp.push(`Parent WhatsApp sent to ${formData.parentWhatsApp}`);
      } catch (error) {
        results.errors.push(`Parent WhatsApp failed: ${error.message}`);
      }
    }

    if (formData.studentWhatsApp) {
      try {
        await twilioClient.messages.create({
          from: twilioWhatsAppNumber,
          to: `whatsapp:${formData.studentWhatsApp}`,
          body: `🎓 *Quiz Completed!*\n\nGreat job completing your quiz!\n📚 Subject: ${formData.subjectName || 'Quiz'}\n\nYour answers have been sent to your email: ${formData.studentEmail}\n\nReview your responses and discuss with your teacher if needed.`
        });
        results.whatsapp.push(`Student WhatsApp sent to ${formData.studentWhatsApp}`);
      } catch (error) {
        results.errors.push(`Student WhatsApp failed: ${error.message}`);
      }
    }

    console.log('Results:', results);

    res.json({
      success: true,
      message: 'Quiz materials processed',
      results: results
    });

  } catch (error) {
    console.error('Error in send-quiz-materials:', error);
    res.status(500).json({
      success: false,
      error: error.message,
      message: 'Failed to send quiz materials'
    });
  }
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(`🚀 Genius Educational Software Backend running on port ${PORT}`);
  console.log(`📧 SendGrid API Key: ${process.env.SENDGRID_API_KEY ? 'Configured' : 'Missing'}`);
  console.log(`📱 Twilio Account SID: ${process.env.TWILIO_ACCOUNT_SID ? 'Configured' : 'Missing'}`);
});
